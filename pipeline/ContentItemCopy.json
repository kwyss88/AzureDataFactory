{
	"name": "ContentItemCopy",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWatermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from WatermarkTable\nwhere TableName = 'Hcms.ContentItems'"
					},
					"dataset": {
						"referenceName": "WatermarkDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "ClearContentTempTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LookupOldWatermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[ClearTable]",
					"storedProcedureParameters": {
						"TableName": {
							"value": "Hcms.ContentItemsTemp",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "ClearContentTempTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@less(int(variables('total')), int(variables('size')))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyContents_Paged",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "POST",
									"requestBody": {
										"value": "{\n    \"size\": @{variables('size')},\n    \"from\": @{variables('from')},\n\"sort\": [{\n  \"lastModified\": {\n    \"order\": \"asc\"\n  }\n}],\n    \"query\": {\n        \"range\": {\n          \"lastModified\": {\n            \"gt\": \"@{activity('LookupOldWatermark').output.firstRow.WatermarkValue}\"\n          }\n        }\n      }\n}",
										"type": "Expression"
									},
									"additionalHeaders": {
										"Content-Type": "application/json"
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['took']"
											}
										},
										{
											"source": {
												"path": "$['timed_out']"
											}
										},
										{
											"source": {
												"path": "$['_shards']['total']"
											}
										},
										{
											"source": {
												"path": "$['_shards']['successful']"
											}
										},
										{
											"source": {
												"path": "$['_shards']['skipped']"
											}
										},
										{
											"source": {
												"path": "$['_shards']['failed']"
											}
										},
										{
											"source": {
												"path": "$['hits']['total']"
											}
										},
										{
											"source": {
												"path": "$['hits']['max_score']"
											}
										},
										{
											"source": {
												"path": "['_index']"
											}
										},
										{
											"source": {
												"path": "['_type']"
											}
										},
										{
											"source": {
												"path": "['_id']"
											}
										},
										{
											"source": {
												"path": "['_score']"
											}
										},
										{
											"source": {
												"path": "['_source']['id']"
											}
										},
										{
											"source": {
												"path": "['_source']['documentId']"
											}
										},
										{
											"source": {
												"path": "['_source']['status']"
											}
										},
										{
											"source": {
												"path": "['_source']['lastModified']"
											}
										},
										{
											"source": {
												"path": "['_source']['version']"
											}
										},
										{
											"source": {
												"path": "['_source']['lastModifiedBy']"
											}
										},
										{
											"source": {
												"path": "['_source']['created']"
											}
										},
										{
											"source": {
												"path": "['_source']['isDeleted']"
											}
										},
										{
											"source": {
												"path": "['_source']['ai']"
											}
										},
										{
											"source": {
												"path": "['_source']['appId']['id']"
											}
										},
										{
											"source": {
												"path": "['_source']['appId']['name']"
											}
										},
										{
											"source": {
												"path": "['_source']['si']"
											}
										},
										{
											"source": {
												"path": "['_source']['schemaId']['id']"
											}
										},
										{
											"source": {
												"path": "['_source']['schemaId']['name']"
											}
										},
										{
											"source": {
												"path": "['_source']['createdBy']"
											}
										},
										{
											"source": {
												"path": "['_source']['dt']"
											}
										},
										{
											"source": {
												"path": "['_source']['data']['stringFieldProperties'][0]['name']"
											}
										},
										{
											"source": {
												"path": "['_source']['data']['stringFieldProperties'][0]['fieldData']['en']"
											}
										},
										{
											"source": {
												"path": "['_source']['dataDraft']['stringFieldProperties'][0]['name']"
											}
										},
										{
											"source": {
												"path": "['_source']['dataDraft']['stringFieldProperties'][0]['fieldData']['en']"
											}
										},
										{
											"source": {
												"path": "['_source']['rf']"
											}
										},
										{
											"source": {
												"path": "['_source']['rd']"
											}
										},
										{
											"source": {
												"path": "['_source']['tg']"
											}
										},
										{
											"source": {
												"path": "['_source']['tgd']"
											}
										},
										{
											"source": {
												"path": "['_source']['cats']"
											}
										},
										{
											"source": {
												"path": "['_source']['ps']"
											}
										},
										{
											"source": {
												"path": "['_source']['tg_draft']"
											}
										},
										{
											"source": {
												"path": "['_source']['tgd_draft']"
											}
										},
										{
											"source": {
												"path": "['_source']['cats_draft']"
											}
										},
										{
											"source": {
												"path": "['_source']['sj']"
											}
										},
										{
											"source": {
												"path": "['_source']['sj2']"
											}
										},
										{
											"source": {
												"path": "['_source']['isPending']"
											}
										},
										{
											"source": {
												"path": "['_source']['nd']"
											}
										},
										{
											"source": {
												"path": "['_source']['ag']"
											}
										},
										{
											"source": {
												"path": "['_source']['ac']"
											}
										},
										{
											"source": {
												"path": "['sort']"
											}
										}
									],
									"collectionReference": "$['hits']['hits']"
								}
							},
							"inputs": [
								{
									"referenceName": "QA_Elastic_Content",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Sql_ContentItemsTemp",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "IncrementFrom",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "CopyContents_Paged",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "fromIncrement",
								"value": {
									"value": "@string(add(int(variables('from')), int(variables('size'))))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "ResetFrom",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "IncrementFrom",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "from",
								"value": {
									"value": "@variables('fromIncrement')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Total",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "CopyContents_Paged",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "total",
								"value": {
									"value": "@string(activity('CopyContents_Paged').output.rowsCopied)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Watermark Time",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Total",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "watermarkTime",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.10:00:00"
				}
			},
			{
				"name": "MergeContentItems",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Hcms].[MergeContentItems]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "UpdateWatermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "MergeContentItems",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateWatermark]",
					"storedProcedureParameters": {
						"LastModified": {
							"value": {
								"value": "@variables('watermarkTime')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWatermark').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"fromIncrement": {
				"type": "String",
				"defaultValue": "0"
			},
			"from": {
				"type": "String",
				"defaultValue": "0"
			},
			"size": {
				"type": "String",
				"defaultValue": "500"
			},
			"total": {
				"type": "String",
				"defaultValue": "1"
			},
			"watermarkTime": {
				"type": "String",
				"defaultValue": "@utcnow()"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}